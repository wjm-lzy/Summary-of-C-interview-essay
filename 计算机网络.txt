谈起计算机网络，上来第一个问题肯定就是OSI七层参考模型，以下八股也是基于这个框架不断补充
1.应用层：对于你就业来说最重要的一层，涉及的协议多的一匹
2.显示层
3.会话层
4.传输层：这里的TCP和UDP经常作为考察的重点
5.网络层
6.链路层
7.物理层

1.
2.
3.
4.
5.
6.链路层
该层是点对点之间的传输
这层涉及到的协议主要有：PPP（点对点协议），HDLC（高级数据链路控制协议）
	PPP协议是面向字节的协议
	HDLC是面向比特的协议：以01111110开头和结尾，通过比特填充避免歧义


组帧方式分为三种：字符计数法，字符填充的首尾定界法，比特填充的首位标志法
	字符计数法：头部用一个字符写明帧内几个字符
	字符填充：看到一个特殊字符，就在前面加上转义字符
	比特填充：连续五个一加上一个0

这层提供三种服务：
	1.有连接有确认
	2.无连接无确认
	3.无连接有确认
	当然，你只需要记住，有连接必有确认，不然我连它干嘛


这层包含的功能有：流量控制，帧定界，帧同步，透明传输，差错控制，链路管理
流量控制介绍：
	1.停止-等待协议：一次发一个帧，下一帧收到上一帧的确认帧才可以发送
	2.GBN协议（后退N帧协议）：累积确认，可以发多个帧，接收端只收按序的一个帧
	3.SR协议（选择重传协议）：可以发多个帧，可以乱序接收乱序的多个帧
	这个流量控制实际上是对发送方数据流程的控制

差错控制：奇偶校验码，海明码，循环冗余校验码
	奇偶校验码：奇/偶校验码：填上校验元后，码长为n的码字中1的个数为奇/偶数
	海明码：发现双比特错误，纠正单比特错误
		2^k >= n+k+1 海明不等式，这个k是校验的位数
		海明距：检测n位，n+1，纠正n位错误，2n+1
	CRC校验码：发现单比特错误


这里介绍一下基本概念：
	
相信通过上面的介绍你肯定对数据链路层有一定了解，那么接下来就是面试中会问到的与链路层相关的问题了

7.


### 粘包是什么 怎么解决
  粘包（Packet Sticking）​​ 是指发送方多次发送的数据包在接收方缓冲区中被合并成一个“粘在一起”的大数据包的现象。粘包会导致接收方无法正确解析原始数据包的边界，是网络编程中常见的问题。
  使用nagle算法来解决：该算法会合并多个小数据包（等待一定时间或数据量达到 MSS 后再发送）
  Nagle 算法的核心逻辑是：​​在任意时刻，最多只能有一个未被确认的小数据包​​
    若数据包大小达到 ​​MSS（最大报文段大小）​​，立即发送。
    若缓冲区有未被确认的数据包，则缓存新数据，直到收到 ACK 确认后再发送。
    若数据包较小且无未确认数据，则等待一定时间（通常 200ms）或积累到一定大小再发送。
